scalar DateTime
scalar Time
scalar URI

enum SimpleState {
    PENDING
    APPROVED
    REJECTED
}

enum ApplicationState {
    WAITING_FOR_EMPLOYER
    ACCEPTED_BY_EMPLOYER
    REJECTED_BY_EMPLOYER
    ACCEPTED_BY_STUDENT
    REJECTED_BY_STUDENT
}

enum ContractState {
    WAITING_FOR_EMPLOYER
    REJECTED_BY_EMPLOYER
    WAITING_FOR_STUDENT
    REJECTED_BY_STUDENT
    WAITING_FOR_ADMIN
    REJECTED_BY_ADMIN
    SIGNED
}

type Address {
    number: Int!
    street: String!
    city: String!
    province: String
    country: String!
    postalCode: String!
}

interface User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
}

type Student {
    id: ID! # Numéro de matricule de l'étudiant
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
    address: Address!

    semesters: [String!]!
    signatures: [URI!]
}

type InternshipMonitor { # Enseignant
    id: ID!
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
}

type CollegeAdministrator {
    id: ID!
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!

    signatures: [URI!]
}

type Company {
    id: ID!
    name: String!
    address: Address!
    phoneNumber: String!
}

type Representative {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
    company: Company!

    signatures: [URI!]
}

type SimpleReview {
    status: SimpleState!
    reason: String
}

type Resume {
    id: ID!
    student: Student!
    displayName: String!
    location: URI!
    review: SimpleReview!
}

type InternshipOffer {
    id: ID!
    representative: Representative!
    createdOn: DateTime!
    closesOn: DateTime!
    openings: Int!

    title: String!
    description: String!
    startsOn: DateTime!
    finishesOn: DateTime!
    salary: Float!
    workdayStartsAt: Time
    wordayFinishesAt: Time

    file: URI

    semester: String!

    review: SimpleReview!
    visibleTo: [Student!]
}

type InternshipApplication {
    id: ID!
    internship: InternshipOffer!
    resume: Resume!
    status: ApplicationState!
    rejectionMsg: String
}

type Signature {
    id: ID!
    signedBy: User!
    signedOn: DateTime!
    imageLocation: URI!
}

type ContractReview {
    status: ContractState!
    reason: String
}

type Contract {
    id: ID!
    application: InternshipApplication!
    file: URI

    collegeCommitment: String!
    companyCommitment: String!
    studentCommitment: String!

    collegeSignature: Signature
    companySignature: Signature
    studentSignature: Signature

    review: ContractReview!
}