scalar DateTime
scalar Time
scalar URI

enum SimpleState {
    PENDING
    APPROVED
    REJECTED
}

enum ApplicationState {
    WAITING_FOR_EMPLOYER
    ACCEPTED_BY_EMPLOYER
    REJECTED_BY_EMPLOYER
    ACCEPTED_BY_STUDENT
    REJECTED_BY_STUDENT
}

enum ContractState {
    WAITING_FOR_EMPLOYER
    REJECTED_BY_EMPLOYER
    WAITING_FOR_STUDENT
    REJECTED_BY_STUDENT
    WAITING_FOR_ADMIN
    REJECTED_BY_ADMIN
    SIGNED
}

type Address {
    number: String!
    appartement: String
    street: String!
    city: String!
    province: String
    country: String!
    postalCode: String!
}

type Company {
    id: ID!
    name: String!
    address: Address!
    phoneNumber: String!
}

type Department {
    name: String!
    manager: User!
}

interface User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
}

type Student implements User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!

    address: Address
    semesters: [String!]
}

type Supervisor implements User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!

    company: Company
}

type Monitor implements User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: String!
    departments: [Department!]!
}

type SimpleReview {
    status: SimpleState!
    reason: String
}

type Resume {
    id: ID!
    owner: Student!
    displayName: String!
    location: URI!
    review: SimpleReview!
}

type InternshipOffer {
    id: ID!
    supervisor: Supervisor!
    createdOn: DateTime!
    closesOn: DateTime!
    openings: Int!
    department: Department

    title: String!
    description: String!
    startsOn: DateTime!
    finishesOn: DateTime!
    salary: Float!
    workdayStartsAt: Time
    wordayFinishesAt: Time

    attachedFile: URI

    semester: String!

    review: SimpleReview!
    visibleTo: [Student!]
}

type InternshipApplication {
    id: ID!
    internship: InternshipOffer!
    resume: Resume!
    status: ApplicationState!
    rejectionMsg: String
}

type ContractReview {
    status: ContractState!
    reason: String
}

type Contract {
    id: ID!
    application: InternshipApplication!
    file: URI!

    review: ContractReview!
}